/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package calculator;

import org.junit.jupiter.api.Test;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import static org.junit.jupiter.api.Assertions.*;

import javax.swing.JButton; // my buttons are part of JButtonl

import calculator.panels.*;
import calculator.utilities.OperatorHandler;

class CalculatorUITest {
    private static Calculator calculator;
    private static DisplayPanel displayPanel;
    private static NumberKeyPanel numberKeyPanel;
    private static OperatorHandler operatorHandler;

    @BeforeAll
    public static void setUpClass() {
        calculator = new Calculator();
        displayPanel = new DisplayPanel();
        operatorHandler = new OperatorHandler(displayPanel.getDisplay()); // Assumes DisplayPanel has a method
                                                                          // getDisplay() returning the JTextField
        numberKeyPanel = new NumberKeyPanel(operatorHandler);
    }

    @BeforeEach
    public void resetDisplay() {
        displayPanel.getDisplay().setText(""); // Clear the display before each test
    }

    @DisplayName("Testing Button[0] writes zero to display")
    @Test
    public void writeZeroToDisplay() {
        JButton zeroButton = findButtonByActionCommand("0");
        zeroButton.doClick(); // Simulate button click
        String expectedDisplayText = "0"; // Expect '0'
        String actualDisplayText = displayPanel.getDisplay().getText(); // Get text from the display
        assertEquals(expectedDisplayText, actualDisplayText, "The display should show '0' after pressing button 0.");
    }

    @Test
    void appPanelIsCreated() {
        assertNotNull(numberKeyPanel, "NumberKeyPanel should be initialized");
    }

    private JButton findButtonByActionCommand(String command) {
        for (java.awt.Component comp : numberKeyPanel.getComponents()) {
            if (comp instanceof JButton) {
                JButton button = (JButton) comp;
                if (button.getActionCommand().equals(command)) {
                    return button;
                }
            }
        }
        return null; // If no button found with the specified command
    }
}
